{"version":3,"sources":["utils/utils.jsx","components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["getSelectedTab","tabs","selectedTabId","find","tab","id","Tabs","onTabSelected","selectedTab","className","map","cn","href","onClick","title","content","App","useState","setSelectedTabId","newTab","ReactDOM","render","document","getElementById"],"mappings":"qMAAO,SAASA,EAAeC,EAAMC,GACnC,OAAOD,EAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOH,MAAkBD,EAAK,G,2BCG/CK,EAAO,SAAC,GAId,IAHLL,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAK,EACI,EADJA,cAEMC,EAAcR,EAAeC,EAAMC,GAEzC,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAAAN,GAAG,OACX,oBACEK,UAAWE,IAAG,CAAE,YAAaH,EAAYH,KACrCD,EAAIC,KACR,UAAQ,MAHV,SAME,mBACEO,KAAI,WAAMR,EAAIC,IACd,UAAQ,UACRQ,QAAS,WACHL,EAAYH,KAAOD,EAAIC,IACzBE,EAAcH,IALpB,SASGA,EAAIU,SAXFV,EAAIC,WAkBjB,qBAAKI,UAAU,QAAQ,UAAQ,aAA/B,SACGD,EAAYO,cC/BRd,EAAO,CAClB,CAAEI,GAAI,QAASS,MAAO,QAASC,QAAS,eACxC,CAAEV,GAAI,QAASS,MAAO,QAASC,QAAS,eACxC,CAAEV,GAAI,QAASS,MAAO,QAASC,QAAS,gBAG7BC,EAAM,WACjB,MAA0CC,mBAAShB,EAAK,GAAGI,IAA3D,mBAAOH,EAAP,KAAsBgB,EAAtB,KACMV,EAAcR,EAAeC,EAAMC,GAGzC,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBD,EAAYM,SAGlC,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeA,EACfK,cAXoB,SAAAY,GAAM,OAAID,EAAiBC,EAAOd,WCd9De,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.665dc5e1.chunk.js","sourcesContent":["export function getSelectedTab(tabs, selectedTabId) {\n  return tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n}\n","import cn from 'classnames';\n\nimport { getSelectedTab } from '../../utils/utils';\n\nexport const Tabs = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = getSelectedTab(tabs, selectedTabId);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={cn({ 'is-active': selectedTab.id\n              === tab.id })}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (selectedTab.id !== tab.id) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { getSelectedTab } from './utils/utils';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const selectedTab = getSelectedTab(tabs, selectedTabId);\n  const handleTabSelected = newTab => setSelectedTabId(newTab.id);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}